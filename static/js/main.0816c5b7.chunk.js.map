{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","calc","setCalc","result","setResult","ops","updateCalc","value","includes","slice","eval","toString","calculate","deleteLast","className","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"s1BAIA,SAASA,MACP,cAAwBC,oDAAS,IAAjC,0LAAOC,KAAP,cAAaC,QAAb,cACA,WAA4BF,oDAAS,IAArC,2LAAOG,OAAP,cAAeC,UAAf,cAEMC,IAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAE3BC,WAAa,SAAbA,WAAaC,OAGbF,IAAIG,SAASD,QAAmB,KAATN,MACvBI,IAAIG,SAASD,QAAUF,IAAIG,SAASP,KAAKQ,OAAO,MAKpDP,QAAQD,KAAOM,OAEXF,IAAIG,SAASD,QACfH,UAAUM,KAAKT,KAAOM,OAAOI,cAI3BC,UAAY,SAAZA,YACJV,QAAQQ,KAAKT,MAAMU,aAGfE,WAAa,WACjB,GAAa,KAATZ,KAAJ,CAIA,IAAMM,EAAQN,KAAKQ,MAAM,GAAI,GAG7BP,QAAQK,GACRH,UAHe,KAMjB,OACE,kEAAKU,UAAU,MAAf,SACE,mEAAKA,UAAU,UAAf,UAEE,mEAAKA,UAAU,SAAf,UACGX,OAAS,sEAAgB,GAD5B,OAEGF,MAAQ,OAGX,mEAAKa,UAAU,kBAAf,UACE,mEAAKA,UAAU,kBAAf,UACE,6EACE,qEAAQA,UAAU,sBAAsBC,QAASF,WAAjD,eACA,qEAAQC,UAAU,SAASC,QAAS,kBAAMT,WAAW,MAArD,qBAGF,mEAAKQ,UAAU,kBAAf,UACE,6EACE,qEAAQA,UAAU,SAASC,QAAS,kBAAMT,WAAW,MAArD,eACA,qEAAQQ,UAAU,SAASC,QAAS,kBAAMT,WAAW,MAArD,eACA,qEAAQQ,UAAU,SAASC,QAAS,kBAAMT,WAAW,MAArD,kBAGF,6EACE,qEAAQQ,UAAU,SAASC,QAAS,kBAAMT,WAAW,MAArD,eACA,qEAAQQ,UAAU,SAASC,QAAS,kBAAMT,WAAW,MAArD,eACA,qEAAQQ,UAAU,SAASC,QAAS,kBAAMT,WAAW,MAArD,kBAGF,6EACE,qEAAQQ,UAAU,SAASC,QAAS,kBAAMT,WAAW,MAArD,eACA,qEAAQQ,UAAU,SAASC,QAAS,kBAAMT,WAAW,MAArD,eACA,qEAAQQ,UAAU,SAASC,QAAS,kBAAMT,WAAW,MAArD,qBAIJ,6EACE,qEAAQQ,UAAU,gBAAgBC,QAAS,kBAAMT,WAAW,MAA5D,eACA,qEAAQQ,UAAU,SAASC,QAAS,kBAAMT,WAAW,MAArD,qBAIJ,mEAAKQ,UAAU,oBAAf,UACE,qEAAQA,UAAU,SAASC,QAAS,kBAAMT,WAAW,MAArD,kBACA,qEAAQQ,UAAU,SAASC,QAAS,kBAAMT,WAAW,MAArD,oBACA,qEAAQQ,UAAU,cAAcC,QAAS,kBAAMT,WAAW,MAA1D,eACA,qEAAQQ,UAAU,eAAeC,QAASH,UAA1C,0BAQGb,2B,gICpFAiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC5B,EAAA,EAAD,MAEF6B,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0816c5b7.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './style.css';\n\n\nfunction App() {\n  const [calc, setCalc] = useState('');\n  const [result, setResult] = useState('');\n    \n  const ops = ['/', '*', '+', '-', '.'];\n    \n  const updateCalc = value => {\n\n    if (\n        ops.includes(value) && calc === '' ||\n        ops.includes(value) && ops.includes(calc.slice(-1))\n    ) {\n      return;\n    }\n    \n    setCalc(calc + value);\n\n    if(!ops.includes(value)) {\n      setResult(eval(calc + value).toString());\n    }\n  }\n\n  const calculate = () => {\n    setCalc(eval(calc).toString());\n  }\n\n  const deleteLast = () => {\n    if (calc === '') {\n      return;\n    }\n\n    const value = calc.slice(0, -1);\n    const result = 0;\n\n    setCalc(value);\n    setResult(result);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className='wrapper'>\n\n        <div className='screen'>\n          {result ? <span></span> : ''}&nbsp; \n          {calc || '0'}\n        </div>\n        \n        <div className='buttons-wrapper'>\n          <div className='numbers-wrapper'>  \n            <div>\n              <button className='button double clear' onClick={deleteLast}>C</button>\n              <button className='button' onClick={() => updateCalc('/')}>&divide;</button>\n            </div>  \n            \n            <div className='numbers-wrapper'>\n              <div>\n                <button className=\"button\" onClick={() => updateCalc('7')}>7</button>\n                <button className=\"button\" onClick={() => updateCalc('8')}>8</button>\n                <button className=\"button\" onClick={() => updateCalc('9')}>9</button>\n              </div>\n              \n              <div>\n                <button className=\"button\" onClick={() => updateCalc('4')}>4</button>\n                <button className=\"button\" onClick={() => updateCalc('5')}>5</button>\n                <button className=\"button\" onClick={() => updateCalc('6')}>6</button>\n              </div>\n              \n              <div>\n                <button className=\"button\" onClick={() => updateCalc('1')}>1</button>\n                <button className=\"button\" onClick={() => updateCalc('2')}>2</button>\n                <button className=\"button\" onClick={() => updateCalc('3')}>3</button>\n              </div>\n            </div>\n            \n            <div>\n              <button className=\"button double\" onClick={() => updateCalc('0')}>0</button>\n              <button className=\"button\" onClick={() => updateCalc('.')}>.</button>\n            </div>\n          </div>\n          \n          <div className='operators-wrapper'>\n            <button className=\"button\" onClick={() => updateCalc('*')}>&times;</button>\n            <button className=\"button\" onClick={() => updateCalc('-')}>&ndash;</button>\n            <button className=\"button plus\" onClick={() => updateCalc('+')}>+</button>\n            <button className=\"button equal\" onClick={calculate}>=</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}